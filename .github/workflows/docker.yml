name: Java CI with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_REPO }}
        tags: |
          type=sha
          type=raw,latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Test
      uses: docker/build-push-action@v6
      with:
        context: .
        target: unit-test-results
        outputs: type=local,dest=out
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Publish Unit Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Unit Test Results
        path: out/test-results/test/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Integration Test
      uses: docker/build-push-action@v6
      with:
        context: .
        target: integration-test-results
        load: true
        secrets: |
          "SPRING_DATA_MONGODB_URI=${{ secrets.SPRING_DATA_MONGODB_URI }}"
          "SPRING_DATA_MONGODB_DATABASE=IT_${{ github.run_id }}-${{ github.run_attempt }}"
        outputs: type=local,dest=out
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Publish Integration Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Integration Test Results
        path: out/test-results/integrationTest/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Sonar Main
      if: github.event.pull_request.base.ref == null
      uses: docker/build-push-action@v6
      with:
        context: .
        target: sonar
        load: true
        secrets: |
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Sonar PR
      if: github.event.pull_request.base.ref != null
      uses: docker/build-push-action@v6
      with:
        context: .
        target: sonar-pr
        load: true
        build-args: |
          sonar_pull_request_branch_name=${{ github.head_ref }}
          sonar_pull_request_key=${{ github.event.number }}
          sonar_pull_request_base=${{ github.event.pull_request.base.ref }}
        secrets: |
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Log in to Docker Hub
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: Build Docker image
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
    - name: Deploy
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: curl "$deploy_url"
