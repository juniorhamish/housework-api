# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    env:
      SPRING_DATA_MONGODB_URI: ${{ secrets.SPRING_DATA_MONGODB_URI }}
      SPRING_DATA_MONGODB_DATABASE: IT_${{ github.run_id }}-${{ github.run_attempt }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      BETTER_STACK_TOKEN: ${{ secrets.BETTER_STACK_TOKEN }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_REPO }}
        tags: |
          type=sha
          type=raw,latest
    - name: Docker meta
      id: pr-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_REPO }}
        tags: |
          type=raw,pr-${{ github.event.number }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
    - name: Build
      run: ./gradlew build -x test -x integrationTest
    - name: Build Docker image main
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
    - name: Build Docker image PR
      if: ${{ github.ref != 'refs/heads/main' }}
      id: build-pr
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.pr-meta.outputs.tags }}
    - name: Test
      run: ./gradlew -Dtest.ignoreFailures=true test
    - name: Unit Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Unit Test Results
        path: build/test-results/test/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Integration Test
      run: ./gradlew -Dtest.ignoreFailures=true integrationTest
    - name: Integration Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Integration Test Results
        path: build/test-results/integrationTest/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Sonar Main
      if: github.event.pull_request.base.ref != null
      run: ./gradlew sonar
    - name: Sonar PR
      if: github.event.pull_request.base.ref != null
      run: ./gradlew sonar -Dsonar.pullrequest.branch="${{ github.head_ref }}" -Dsonar.pullrequest.base="${{ github.event.pull_request.base.ref }}" -Dsonar.pullrequest.key="${{ github.event.number }}"
    - name: Create Render service preview
      if: ${{ github.ref != 'refs/heads/main' }}
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/preview'
        method: 'POST'
        bearerToken: ${{ secrets.RENDER_API_KEY }}
        data: '{"imagePath": "${{ secrets.DOCKER_REPO }}@${{ steps.build-pr.outputs.digest }}"}'
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs
  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
