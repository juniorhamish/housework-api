name: Java CI with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build
      uses: docker/build-push-action@v5
      with:
        context: .
        target: build
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Test
      uses: docker/build-push-action@v5
      with:
        context: .
        target: test
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Export Reports
      uses: docker/build-push-action@v5
      with:
        context: .
        target: results
        outputs: type=local,dest=out
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Gradle Tests
        path: out/test-results/test/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Sonar Main
      if: github.event.pull_request.base.ref == null
      uses: docker/build-push-action@v5
      with:
        context: .
        target: sonar
        load: true
        secrets: |
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Sonar PR
      if: github.event.pull_request.base.ref != null
      uses: docker/build-push-action@v5
      with:
        context: .
        target: sonar-pr
        load: true
        build-args: |
          sonar_pull_request_branch_name=${{ github.head_ref }}
          sonar_pull_request_key=${{ github.event.number }}
          sonar_pull_request_base=${{ github.event.pull_request.base.ref }}
        secrets: |
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Log in to Docker Hub
      if: ${{ github.ref == 'refs/heads/main' }}
      run: docker login -u ${{ secrets.DOCKER_USER }}
        -p ${{ secrets.DOCKER_PASS }}
    - name: Build Docker image
      if: ${{ github.ref == 'refs/heads/main' }}
      run: DOCKER_BUILDKIT=1 docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
    - name: Publish Docker image
      if: ${{ github.ref == 'refs/heads/main' }}
      run: docker push $REPO
    - name: Deploy
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: curl "$deploy_url"
